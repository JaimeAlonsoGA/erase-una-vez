import { addCard } from "../db/cards";

const totalCardDeck = [
  Elefante,
  Serpiente,
  Televisor,
  Zapato,
  Sombrero,
  Llave,
  Pájaro,
  Luna,
  Sol,
  Lápiz,
  Libro,
  Plátano,
  Papel,
  Calcetín,
  Mono,
  Manzana,
  Pato,
  Guitarra,
  Flor,
  Árbol,
  Taza,
  León,
  Pantera,
  Delfín,
  Carro,
  Espada,
  Corona,
  Dragón,
  Castillo,
  Bruja,
  Robot,
  Cohete,
  Pastel,
  Reloj,
  Teléfono,
  trono,
  Pestillo,
  Carroza,
  Mutante,
  Omnipresente,
  Barco,
  Nube,
  Negro,
  Lluvia,
  Hechizo,
  Conjuro,
  Madre,
  Padre,
  Primo,
  Ron,
  Vodka,
  Whiskey,
  Tarántula,
  Cuadrado,
  Luciérnaga,
  Patatas,
  Filósofo,
  Guerrero,
  Pincel,
  Lienzo,
  Forja,
  Mazmorra,
  Camino,
  Mineral,
  Río,
  Pez,
  Ballena,
  Arcoiris,
  Estrella,
  Planeta,
  Meteorito,
  Vaca,
  Gato,
  Libro,
  Códice,
  Planta,
  Puñal,
  Curandero,
  Pregonero,
  Acción,
  Paz,
  Gangster,
  Caballo,
  Picante,
  Almohada,
  Sueño,
  Caldo,
  Brebaje,
  Sobrio,
  Ebrio,
  Afectado,
  Hipo,
  Catástrofe,
  Baño,
  Íntimo,
  Curvas,
  Montaña,
  Hacha,
  Nieve,
  Nombre,
  Viento,
  Fugaz,
  Raudo,
  Silvestre,
  Audaz,
  Espía,
  Vino,
  Cerveza,
  Antigüo,
  Oscuro,
  Profundo,
  Brotar,
  Vaina,
  Música,
  Celestial,
  Laud,
  Romper,
  Elfo,
  Enano,
  Hierro,
  Oro,
  Plata,
  Mustio,
  Viejo,
  Criatura,
  Cielo,
  Claroscuro,
  Roble,
  Olivo,
  Escalón,
  Enfermedad,
  Multiplicar,
  Dividir,
  Sumar,
  Comerciar,
  Traficar,
  Carroñero,
  Piojo,
  Ojos,
  Alma,
  Ver,
  Sentir,
  Cuerpo,
  Isla,
  Extranjero,
  Villano,
  Viaje,
  Lejano,
  Destruir,
  Erudito,
  Ermitaño,
  Zarrapastroso,
  Héroe,
  Profecía,
  Fé,
  Culto,
  Secta,
  Madriguera,
  Comarca,
  Torreón,
  Páramo,
  Castillo,
  Pasadizo,
  Fortaleza,
  Pueblo,
  Callejón,
  Rama,
  Raíz,
  Seta,
  Poder,
  Cazar,
  Husmear,
  Ágil,
  Acechar,
  Perezoso,
  Cabra,
  Cuerno,
  Vibración,
  Instinto,
  Intuición,
  Vapor,
  Máquina,
  Engranaje,
  Tornillo,
  Inventor,
  Alquimia,
  Poción,
  Intérprete,
  Idioma,
  Bruma,
  Pirata,
  Entrecortado,
  Silvar,
  Hilo,
  Seda,
  Gusano,
  Gruta,
  Mina,
  Océano,
  Mar,
  Lago,
  Agua,
  Fuego,
  Tierra,
  Hielo,
  Obeja,
  Flor,
  Rana,
  Sapo,
  Arrecife,
  Hundido,
  Barro,
  Reunión,
  Esfera,
  Cubo,
  Infinito,
  Bucle,
  Campo,
  Pradera,
  Oriente,
  Occidente,
  Norteño,
  Sureño,
  Risa,
  Encanto,
  Carisma,
  Tienda,
  Campamento,
  Bucólico,
  Adicto,
  Mentiroso,
  Truco,
  Cartas,
  Azafrán,
  Cueva,
  Fogata,
  Antorcha,
  Frío,
  Calor,
  Húmedo,
  Presión,
  Tensión,
  Nocturno,
  Diurno,
  Vespertino,
  Amancecer,
  Atardecer,
  Colorido,
  Aturdir,
  Curva,
  Astuto,
  Político,
  Abusón,
  Príncipe,
  Reinado,
  Dinastía,
  País,
  Región,
  Actor,
  Engaño,
  Patético,
  Tecnología,
  Grácil,
  Bailarín,
  Cuentacuentos,
  Cuento,
  Posada,
  Molino,
  Semilla,
  Pícaro,
  Escritor,
  Diálogo,
  Contribuir,
  Construcción,
  Proyecto,
  Sal,
  Salario,
  Cien,
  Mil,
  Diez,
  Millón,
  uno,
  dos,
  tres,
  cuatro,
  cinco,
  seis,
  siete,
  ocho,
  nueve,
  cero,
  Travesía,
  Invento,
  Surcar,
  Postre,
  Bienestar,
  Malestar,
  Elocuente,
  Seducción,
];

export const setTotalDeckCard = () => {
  totalCardDeck.map((card) => {
    addCard(card);
  })
}

const shuffleArray = (array) => {
  //The Fisher-Yates shuffle algorithm works by iterating over the array
  //from the last element to the first, and for each element,
  //swapping it with an element at a random index that is less than or equal to the current index.
  //This ensures that every permutation of the array is equally likely.
  let currentIndex = array.length,
    temporaryValue,
    randomIndex;

  while (0 !== currentIndex) {
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex -= 1;

    temporaryValue = array[currentIndex];
    array[currentIndex] = array[randomIndex];
    array[randomIndex] = temporaryValue;
  }

  return array;
};

export const setPersonalDeck = () => {
  const shuffledArray = shuffleArray([...totalCardDeck]);
  const selectedItems = shuffledArray.slice(0, 10);
  return selectedItems;
};
